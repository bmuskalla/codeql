/** Definitions of taint steps in the BeanUtilsGenerated framework */

import java
private import semmle.code.java.dataflow.ExternalFlow

private class BeanUtilsGeneratedSummaryCsv extends SummaryModelCsv {
  override predicate row(string row) {
    row =
      [
        "org.apache.commons.beanutils2.converters;AbstractConverter;true;AbstractConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;ArrayConverter;true;ArrayConverter;(Class,Converter);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;ArrayConverter;true;ArrayConverter;(Class,Converter,int);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;ArrayConverter;true;setAllowedChars;(char[]);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;ArrayConverter;true;toString;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2.converters;BigDecimalConverter;false;BigDecimalConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;BigIntegerConverter;false;BigIntegerConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;BooleanConverter;false;BooleanConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;BooleanConverter;false;BooleanConverter;(String[],String[],Object);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;ByteConverter;false;ByteConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;CalendarConverter;false;CalendarConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;CharacterConverter;false;CharacterConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;ClassConverter;false;ClassConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;ConverterFacade;false;ConverterFacade;(Converter);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;ConverterFacade;false;toString;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2.converters;DateConverter;false;DateConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;DateTimeConverter;true;DateTimeConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;DateTimeConverter;true;getLocale;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2.converters;DateTimeConverter;true;getPatterns;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2.converters;DateTimeConverter;true;getTimeZone;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2.converters;DateTimeConverter;true;setLocale;(Locale);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;DateTimeConverter;true;setPattern;(String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;DateTimeConverter;true;setPatterns;(String[]);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;DateTimeConverter;true;setTimeZone;(TimeZone);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;DateTimeConverter;true;toString;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2.converters;DoubleConverter;false;DoubleConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;DurationConverter;false;DurationConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;EnumConverter;false;EnumConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;FileConverter;false;FileConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;FloatConverter;false;FloatConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;IntegerConverter;false;IntegerConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;LocalDateConverter;false;LocalDateConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;LocalDateTimeConverter;false;LocalDateTimeConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;LocalTimeConverter;false;LocalTimeConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;LongConverter;false;LongConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;MonthDayConverter;false;MonthDayConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;NumberConverter;true;NumberConverter;(boolean,Object);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;NumberConverter;true;getLocale;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2.converters;NumberConverter;true;getPattern;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2.converters;NumberConverter;true;setLocale;(Locale);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;NumberConverter;true;setPattern;(String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;NumberConverter;true;toString;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2.converters;OffsetDateTimeConverter;false;OffsetDateTimeConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;OffsetTimeConverter;false;OffsetTimeConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;PathConverter;false;PathConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;PeriodConverter;false;PeriodConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;ShortConverter;false;ShortConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;SqlDateConverter;false;SqlDateConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;SqlTimeConverter;false;SqlTimeConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;SqlTimestampConverter;false;SqlTimestampConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;StringConverter;false;StringConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;URIConverter;false;URIConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;URLConverter;false;URLConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;UUIDConverter;false;UUIDConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;YearConverter;false;YearConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;YearMonthConverter;false;YearMonthConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;ZoneIdConverter;false;ZoneIdConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;ZoneOffsetConverter;false;ZoneOffsetConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.converters;ZonedDateTimeConverter;false;ZonedDateTimeConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.expression;Resolver;true;getKey;(String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.expression;Resolver;true;getProperty;(String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.expression;Resolver;true;next;(String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.expression;Resolver;true;remove;(String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale.converters;BigDecimalLocaleConverter;true;BigDecimalLocaleConverter;(Locale);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigDecimalLocaleConverter;true;BigDecimalLocaleConverter;(Locale,String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigDecimalLocaleConverter;true;BigDecimalLocaleConverter;(Locale,String);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigDecimalLocaleConverter;true;BigDecimalLocaleConverter;(Locale,String,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigDecimalLocaleConverter;true;BigDecimalLocaleConverter;(Locale,String,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigDecimalLocaleConverter;true;BigDecimalLocaleConverter;(Locale,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigDecimalLocaleConverter;true;BigDecimalLocaleConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigDecimalLocaleConverter;true;BigDecimalLocaleConverter;(Object,Locale);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigDecimalLocaleConverter;true;BigDecimalLocaleConverter;(Object,Locale);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigDecimalLocaleConverter;true;BigDecimalLocaleConverter;(Object,Locale,String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigDecimalLocaleConverter;true;BigDecimalLocaleConverter;(Object,Locale,String);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigDecimalLocaleConverter;true;BigDecimalLocaleConverter;(Object,Locale,String);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigDecimalLocaleConverter;true;BigDecimalLocaleConverter;(Object,Locale,String,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigDecimalLocaleConverter;true;BigDecimalLocaleConverter;(Object,Locale,String,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigDecimalLocaleConverter;true;BigDecimalLocaleConverter;(Object,Locale,String,boolean);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigDecimalLocaleConverter;true;BigDecimalLocaleConverter;(Object,Locale,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigDecimalLocaleConverter;true;BigDecimalLocaleConverter;(Object,Locale,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigDecimalLocaleConverter;true;BigDecimalLocaleConverter;(Object,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigIntegerLocaleConverter;true;BigIntegerLocaleConverter;(Locale);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigIntegerLocaleConverter;true;BigIntegerLocaleConverter;(Locale,String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigIntegerLocaleConverter;true;BigIntegerLocaleConverter;(Locale,String);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigIntegerLocaleConverter;true;BigIntegerLocaleConverter;(Locale,String,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigIntegerLocaleConverter;true;BigIntegerLocaleConverter;(Locale,String,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigIntegerLocaleConverter;true;BigIntegerLocaleConverter;(Locale,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigIntegerLocaleConverter;true;BigIntegerLocaleConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigIntegerLocaleConverter;true;BigIntegerLocaleConverter;(Object,Locale);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigIntegerLocaleConverter;true;BigIntegerLocaleConverter;(Object,Locale);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigIntegerLocaleConverter;true;BigIntegerLocaleConverter;(Object,Locale,String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigIntegerLocaleConverter;true;BigIntegerLocaleConverter;(Object,Locale,String);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigIntegerLocaleConverter;true;BigIntegerLocaleConverter;(Object,Locale,String);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigIntegerLocaleConverter;true;BigIntegerLocaleConverter;(Object,Locale,String,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigIntegerLocaleConverter;true;BigIntegerLocaleConverter;(Object,Locale,String,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigIntegerLocaleConverter;true;BigIntegerLocaleConverter;(Object,Locale,String,boolean);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigIntegerLocaleConverter;true;BigIntegerLocaleConverter;(Object,Locale,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigIntegerLocaleConverter;true;BigIntegerLocaleConverter;(Object,Locale,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;BigIntegerLocaleConverter;true;BigIntegerLocaleConverter;(Object,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ByteLocaleConverter;true;ByteLocaleConverter;(Locale);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ByteLocaleConverter;true;ByteLocaleConverter;(Locale,String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ByteLocaleConverter;true;ByteLocaleConverter;(Locale,String);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ByteLocaleConverter;true;ByteLocaleConverter;(Locale,String,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ByteLocaleConverter;true;ByteLocaleConverter;(Locale,String,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ByteLocaleConverter;true;ByteLocaleConverter;(Locale,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ByteLocaleConverter;true;ByteLocaleConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ByteLocaleConverter;true;ByteLocaleConverter;(Object,Locale);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ByteLocaleConverter;true;ByteLocaleConverter;(Object,Locale);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ByteLocaleConverter;true;ByteLocaleConverter;(Object,Locale,String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ByteLocaleConverter;true;ByteLocaleConverter;(Object,Locale,String);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ByteLocaleConverter;true;ByteLocaleConverter;(Object,Locale,String);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ByteLocaleConverter;true;ByteLocaleConverter;(Object,Locale,String,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ByteLocaleConverter;true;ByteLocaleConverter;(Object,Locale,String,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ByteLocaleConverter;true;ByteLocaleConverter;(Object,Locale,String,boolean);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ByteLocaleConverter;true;ByteLocaleConverter;(Object,Locale,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ByteLocaleConverter;true;ByteLocaleConverter;(Object,Locale,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ByteLocaleConverter;true;ByteLocaleConverter;(Object,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DateLocaleConverter;true;DateLocaleConverter;(Locale);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DateLocaleConverter;true;DateLocaleConverter;(Locale,String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DateLocaleConverter;true;DateLocaleConverter;(Locale,String);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DateLocaleConverter;true;DateLocaleConverter;(Locale,String,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DateLocaleConverter;true;DateLocaleConverter;(Locale,String,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DateLocaleConverter;true;DateLocaleConverter;(Locale,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DateLocaleConverter;true;DateLocaleConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DateLocaleConverter;true;DateLocaleConverter;(Object,Locale);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DateLocaleConverter;true;DateLocaleConverter;(Object,Locale);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DateLocaleConverter;true;DateLocaleConverter;(Object,Locale,String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DateLocaleConverter;true;DateLocaleConverter;(Object,Locale,String);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DateLocaleConverter;true;DateLocaleConverter;(Object,Locale,String);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DateLocaleConverter;true;DateLocaleConverter;(Object,Locale,String,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DateLocaleConverter;true;DateLocaleConverter;(Object,Locale,String,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DateLocaleConverter;true;DateLocaleConverter;(Object,Locale,String,boolean);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DateLocaleConverter;true;DateLocaleConverter;(Object,Locale,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DateLocaleConverter;true;DateLocaleConverter;(Object,Locale,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DateLocaleConverter;true;DateLocaleConverter;(Object,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DecimalLocaleConverter;true;DecimalLocaleConverter;(Locale);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DecimalLocaleConverter;true;DecimalLocaleConverter;(Locale,String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DecimalLocaleConverter;true;DecimalLocaleConverter;(Locale,String);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DecimalLocaleConverter;true;DecimalLocaleConverter;(Locale,String,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DecimalLocaleConverter;true;DecimalLocaleConverter;(Locale,String,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DecimalLocaleConverter;true;DecimalLocaleConverter;(Locale,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DecimalLocaleConverter;true;DecimalLocaleConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DecimalLocaleConverter;true;DecimalLocaleConverter;(Object,Locale);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DecimalLocaleConverter;true;DecimalLocaleConverter;(Object,Locale);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DecimalLocaleConverter;true;DecimalLocaleConverter;(Object,Locale,String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DecimalLocaleConverter;true;DecimalLocaleConverter;(Object,Locale,String);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DecimalLocaleConverter;true;DecimalLocaleConverter;(Object,Locale,String);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DecimalLocaleConverter;true;DecimalLocaleConverter;(Object,Locale,String,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DecimalLocaleConverter;true;DecimalLocaleConverter;(Object,Locale,String,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DecimalLocaleConverter;true;DecimalLocaleConverter;(Object,Locale,String,boolean);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DecimalLocaleConverter;true;DecimalLocaleConverter;(Object,Locale,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DecimalLocaleConverter;true;DecimalLocaleConverter;(Object,Locale,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DecimalLocaleConverter;true;DecimalLocaleConverter;(Object,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DoubleLocaleConverter;true;DoubleLocaleConverter;(Locale);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DoubleLocaleConverter;true;DoubleLocaleConverter;(Locale,String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DoubleLocaleConverter;true;DoubleLocaleConverter;(Locale,String);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DoubleLocaleConverter;true;DoubleLocaleConverter;(Locale,String,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DoubleLocaleConverter;true;DoubleLocaleConverter;(Locale,String,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DoubleLocaleConverter;true;DoubleLocaleConverter;(Locale,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DoubleLocaleConverter;true;DoubleLocaleConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DoubleLocaleConverter;true;DoubleLocaleConverter;(Object,Locale);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DoubleLocaleConverter;true;DoubleLocaleConverter;(Object,Locale);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DoubleLocaleConverter;true;DoubleLocaleConverter;(Object,Locale,String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DoubleLocaleConverter;true;DoubleLocaleConverter;(Object,Locale,String);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DoubleLocaleConverter;true;DoubleLocaleConverter;(Object,Locale,String);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DoubleLocaleConverter;true;DoubleLocaleConverter;(Object,Locale,String,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DoubleLocaleConverter;true;DoubleLocaleConverter;(Object,Locale,String,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DoubleLocaleConverter;true;DoubleLocaleConverter;(Object,Locale,String,boolean);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DoubleLocaleConverter;true;DoubleLocaleConverter;(Object,Locale,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DoubleLocaleConverter;true;DoubleLocaleConverter;(Object,Locale,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;DoubleLocaleConverter;true;DoubleLocaleConverter;(Object,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;FloatLocaleConverter;true;FloatLocaleConverter;(Locale);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;FloatLocaleConverter;true;FloatLocaleConverter;(Locale,String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;FloatLocaleConverter;true;FloatLocaleConverter;(Locale,String);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;FloatLocaleConverter;true;FloatLocaleConverter;(Locale,String,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;FloatLocaleConverter;true;FloatLocaleConverter;(Locale,String,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;FloatLocaleConverter;true;FloatLocaleConverter;(Locale,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;FloatLocaleConverter;true;FloatLocaleConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;FloatLocaleConverter;true;FloatLocaleConverter;(Object,Locale);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;FloatLocaleConverter;true;FloatLocaleConverter;(Object,Locale);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;FloatLocaleConverter;true;FloatLocaleConverter;(Object,Locale,String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;FloatLocaleConverter;true;FloatLocaleConverter;(Object,Locale,String);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;FloatLocaleConverter;true;FloatLocaleConverter;(Object,Locale,String);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;FloatLocaleConverter;true;FloatLocaleConverter;(Object,Locale,String,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;FloatLocaleConverter;true;FloatLocaleConverter;(Object,Locale,String,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;FloatLocaleConverter;true;FloatLocaleConverter;(Object,Locale,String,boolean);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;FloatLocaleConverter;true;FloatLocaleConverter;(Object,Locale,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;FloatLocaleConverter;true;FloatLocaleConverter;(Object,Locale,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;FloatLocaleConverter;true;FloatLocaleConverter;(Object,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;IntegerLocaleConverter;true;IntegerLocaleConverter;(Locale);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;IntegerLocaleConverter;true;IntegerLocaleConverter;(Locale,String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;IntegerLocaleConverter;true;IntegerLocaleConverter;(Locale,String);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;IntegerLocaleConverter;true;IntegerLocaleConverter;(Locale,String,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;IntegerLocaleConverter;true;IntegerLocaleConverter;(Locale,String,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;IntegerLocaleConverter;true;IntegerLocaleConverter;(Locale,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;IntegerLocaleConverter;true;IntegerLocaleConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;IntegerLocaleConverter;true;IntegerLocaleConverter;(Object,Locale);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;IntegerLocaleConverter;true;IntegerLocaleConverter;(Object,Locale);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;IntegerLocaleConverter;true;IntegerLocaleConverter;(Object,Locale,String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;IntegerLocaleConverter;true;IntegerLocaleConverter;(Object,Locale,String);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;IntegerLocaleConverter;true;IntegerLocaleConverter;(Object,Locale,String);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;IntegerLocaleConverter;true;IntegerLocaleConverter;(Object,Locale,String,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;IntegerLocaleConverter;true;IntegerLocaleConverter;(Object,Locale,String,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;IntegerLocaleConverter;true;IntegerLocaleConverter;(Object,Locale,String,boolean);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;IntegerLocaleConverter;true;IntegerLocaleConverter;(Object,Locale,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;IntegerLocaleConverter;true;IntegerLocaleConverter;(Object,Locale,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;IntegerLocaleConverter;true;IntegerLocaleConverter;(Object,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;LongLocaleConverter;true;LongLocaleConverter;(Locale);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;LongLocaleConverter;true;LongLocaleConverter;(Locale,String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;LongLocaleConverter;true;LongLocaleConverter;(Locale,String);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;LongLocaleConverter;true;LongLocaleConverter;(Locale,String,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;LongLocaleConverter;true;LongLocaleConverter;(Locale,String,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;LongLocaleConverter;true;LongLocaleConverter;(Locale,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;LongLocaleConverter;true;LongLocaleConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;LongLocaleConverter;true;LongLocaleConverter;(Object,Locale);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;LongLocaleConverter;true;LongLocaleConverter;(Object,Locale);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;LongLocaleConverter;true;LongLocaleConverter;(Object,Locale,String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;LongLocaleConverter;true;LongLocaleConverter;(Object,Locale,String);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;LongLocaleConverter;true;LongLocaleConverter;(Object,Locale,String);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;LongLocaleConverter;true;LongLocaleConverter;(Object,Locale,String,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;LongLocaleConverter;true;LongLocaleConverter;(Object,Locale,String,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;LongLocaleConverter;true;LongLocaleConverter;(Object,Locale,String,boolean);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;LongLocaleConverter;true;LongLocaleConverter;(Object,Locale,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;LongLocaleConverter;true;LongLocaleConverter;(Object,Locale,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;LongLocaleConverter;true;LongLocaleConverter;(Object,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ShortLocaleConverter;true;ShortLocaleConverter;(Locale);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ShortLocaleConverter;true;ShortLocaleConverter;(Locale,String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ShortLocaleConverter;true;ShortLocaleConverter;(Locale,String);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ShortLocaleConverter;true;ShortLocaleConverter;(Locale,String,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ShortLocaleConverter;true;ShortLocaleConverter;(Locale,String,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ShortLocaleConverter;true;ShortLocaleConverter;(Locale,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ShortLocaleConverter;true;ShortLocaleConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ShortLocaleConverter;true;ShortLocaleConverter;(Object,Locale);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ShortLocaleConverter;true;ShortLocaleConverter;(Object,Locale);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ShortLocaleConverter;true;ShortLocaleConverter;(Object,Locale,String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ShortLocaleConverter;true;ShortLocaleConverter;(Object,Locale,String);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ShortLocaleConverter;true;ShortLocaleConverter;(Object,Locale,String);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ShortLocaleConverter;true;ShortLocaleConverter;(Object,Locale,String,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ShortLocaleConverter;true;ShortLocaleConverter;(Object,Locale,String,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ShortLocaleConverter;true;ShortLocaleConverter;(Object,Locale,String,boolean);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ShortLocaleConverter;true;ShortLocaleConverter;(Object,Locale,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ShortLocaleConverter;true;ShortLocaleConverter;(Object,Locale,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;ShortLocaleConverter;true;ShortLocaleConverter;(Object,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlDateLocaleConverter;true;SqlDateLocaleConverter;(Locale);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlDateLocaleConverter;true;SqlDateLocaleConverter;(Locale,String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlDateLocaleConverter;true;SqlDateLocaleConverter;(Locale,String);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlDateLocaleConverter;true;SqlDateLocaleConverter;(Locale,String,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlDateLocaleConverter;true;SqlDateLocaleConverter;(Locale,String,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlDateLocaleConverter;true;SqlDateLocaleConverter;(Locale,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlDateLocaleConverter;true;SqlDateLocaleConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlDateLocaleConverter;true;SqlDateLocaleConverter;(Object,Locale);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlDateLocaleConverter;true;SqlDateLocaleConverter;(Object,Locale);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlDateLocaleConverter;true;SqlDateLocaleConverter;(Object,Locale,String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlDateLocaleConverter;true;SqlDateLocaleConverter;(Object,Locale,String);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlDateLocaleConverter;true;SqlDateLocaleConverter;(Object,Locale,String);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlDateLocaleConverter;true;SqlDateLocaleConverter;(Object,Locale,String,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlDateLocaleConverter;true;SqlDateLocaleConverter;(Object,Locale,String,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlDateLocaleConverter;true;SqlDateLocaleConverter;(Object,Locale,String,boolean);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlDateLocaleConverter;true;SqlDateLocaleConverter;(Object,Locale,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlDateLocaleConverter;true;SqlDateLocaleConverter;(Object,Locale,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlDateLocaleConverter;true;SqlDateLocaleConverter;(Object,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimeLocaleConverter;true;SqlTimeLocaleConverter;(Locale);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimeLocaleConverter;true;SqlTimeLocaleConverter;(Locale,String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimeLocaleConverter;true;SqlTimeLocaleConverter;(Locale,String);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimeLocaleConverter;true;SqlTimeLocaleConverter;(Locale,String,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimeLocaleConverter;true;SqlTimeLocaleConverter;(Locale,String,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimeLocaleConverter;true;SqlTimeLocaleConverter;(Locale,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimeLocaleConverter;true;SqlTimeLocaleConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimeLocaleConverter;true;SqlTimeLocaleConverter;(Object,Locale);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimeLocaleConverter;true;SqlTimeLocaleConverter;(Object,Locale);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimeLocaleConverter;true;SqlTimeLocaleConverter;(Object,Locale,String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimeLocaleConverter;true;SqlTimeLocaleConverter;(Object,Locale,String);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimeLocaleConverter;true;SqlTimeLocaleConverter;(Object,Locale,String);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimeLocaleConverter;true;SqlTimeLocaleConverter;(Object,Locale,String,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimeLocaleConverter;true;SqlTimeLocaleConverter;(Object,Locale,String,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimeLocaleConverter;true;SqlTimeLocaleConverter;(Object,Locale,String,boolean);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimeLocaleConverter;true;SqlTimeLocaleConverter;(Object,Locale,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimeLocaleConverter;true;SqlTimeLocaleConverter;(Object,Locale,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimeLocaleConverter;true;SqlTimeLocaleConverter;(Object,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimestampLocaleConverter;true;SqlTimestampLocaleConverter;(Locale);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimestampLocaleConverter;true;SqlTimestampLocaleConverter;(Locale,String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimestampLocaleConverter;true;SqlTimestampLocaleConverter;(Locale,String);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimestampLocaleConverter;true;SqlTimestampLocaleConverter;(Locale,String,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimestampLocaleConverter;true;SqlTimestampLocaleConverter;(Locale,String,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimestampLocaleConverter;true;SqlTimestampLocaleConverter;(Locale,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimestampLocaleConverter;true;SqlTimestampLocaleConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimestampLocaleConverter;true;SqlTimestampLocaleConverter;(Object,Locale);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimestampLocaleConverter;true;SqlTimestampLocaleConverter;(Object,Locale);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimestampLocaleConverter;true;SqlTimestampLocaleConverter;(Object,Locale,String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimestampLocaleConverter;true;SqlTimestampLocaleConverter;(Object,Locale,String);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimestampLocaleConverter;true;SqlTimestampLocaleConverter;(Object,Locale,String);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimestampLocaleConverter;true;SqlTimestampLocaleConverter;(Object,Locale,String,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimestampLocaleConverter;true;SqlTimestampLocaleConverter;(Object,Locale,String,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimestampLocaleConverter;true;SqlTimestampLocaleConverter;(Object,Locale,String,boolean);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimestampLocaleConverter;true;SqlTimestampLocaleConverter;(Object,Locale,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimestampLocaleConverter;true;SqlTimestampLocaleConverter;(Object,Locale,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;SqlTimestampLocaleConverter;true;SqlTimestampLocaleConverter;(Object,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;StringLocaleConverter;true;StringLocaleConverter;(Locale);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;StringLocaleConverter;true;StringLocaleConverter;(Locale,String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;StringLocaleConverter;true;StringLocaleConverter;(Locale,String);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;StringLocaleConverter;true;StringLocaleConverter;(Locale,String,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;StringLocaleConverter;true;StringLocaleConverter;(Locale,String,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;StringLocaleConverter;true;StringLocaleConverter;(Locale,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;StringLocaleConverter;true;StringLocaleConverter;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;StringLocaleConverter;true;StringLocaleConverter;(Object,Locale);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;StringLocaleConverter;true;StringLocaleConverter;(Object,Locale);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;StringLocaleConverter;true;StringLocaleConverter;(Object,Locale,String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;StringLocaleConverter;true;StringLocaleConverter;(Object,Locale,String);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;StringLocaleConverter;true;StringLocaleConverter;(Object,Locale,String);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;StringLocaleConverter;true;StringLocaleConverter;(Object,Locale,String,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;StringLocaleConverter;true;StringLocaleConverter;(Object,Locale,String,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;StringLocaleConverter;true;StringLocaleConverter;(Object,Locale,String,boolean);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;StringLocaleConverter;true;StringLocaleConverter;(Object,Locale,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;StringLocaleConverter;true;StringLocaleConverter;(Object,Locale,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale.converters;StringLocaleConverter;true;StringLocaleConverter;(Object,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale;BaseLocaleConverter;true;convert;(Object);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;BaseLocaleConverter;true;convert;(Object);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;BaseLocaleConverter;true;convert;(Object,String);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;BaseLocaleConverter;true;convert;(Object,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtils;true;getIndexedProperty;(Object,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtils;true;getIndexedProperty;(Object,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtils;true;getIndexedProperty;(Object,String,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtils;true;getIndexedProperty;(Object,String,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtils;true;getIndexedProperty;(Object,String,int);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtils;true;getIndexedProperty;(Object,String,int);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtils;true;getIndexedProperty;(Object,String,int,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtils;true;getIndexedProperty;(Object,String,int,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtils;true;getMappedProperty;(Object,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtils;true;getMappedProperty;(Object,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtils;true;getMappedProperty;(Object,String,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtils;true;getMappedProperty;(Object,String,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtils;true;getMappedProperty;(Object,String,String,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtils;true;getMappedProperty;(Object,String,String,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtils;true;getMappedPropertyLocale;(Object,String,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtils;true;getMappedPropertyLocale;(Object,String,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtils;true;getNestedProperty;(Object,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtils;true;getNestedProperty;(Object,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtils;true;getNestedProperty;(Object,String,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtils;true;getNestedProperty;(Object,String,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtils;true;getProperty;(Object,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtils;true;getProperty;(Object,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtils;true;getProperty;(Object,String,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtils;true;getProperty;(Object,String,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtils;true;getSimpleProperty;(Object,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtils;true;getSimpleProperty;(Object,String,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtilsBean;true;LocaleBeanUtilsBean;(LocaleConvertUtilsBean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtilsBean;true;LocaleBeanUtilsBean;(LocaleConvertUtilsBean,ConvertUtilsBean,PropertyUtilsBean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtilsBean;true;LocaleBeanUtilsBean;(LocaleConvertUtilsBean,ConvertUtilsBean,PropertyUtilsBean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtilsBean;true;LocaleBeanUtilsBean;(LocaleConvertUtilsBean,ConvertUtilsBean,PropertyUtilsBean);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtilsBean;true;getDefaultLocale;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtilsBean;true;getIndexedProperty;(Object,String,String);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtilsBean;true;getIndexedProperty;(Object,String,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtilsBean;true;getIndexedProperty;(Object,String,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtilsBean;true;getIndexedProperty;(Object,String,int,String);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtilsBean;true;getIndexedProperty;(Object,String,int,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtilsBean;true;getIndexedProperty;(Object,String,int,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtilsBean;true;getLocaleConvertUtils;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtilsBean;true;getMappedProperty;(Object,String,String,String);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtilsBean;true;getMappedProperty;(Object,String,String,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtilsBean;true;getMappedProperty;(Object,String,String,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtilsBean;true;getMappedPropertyLocale;(Object,String,String);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtilsBean;true;getMappedPropertyLocale;(Object,String,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtilsBean;true;getMappedPropertyLocale;(Object,String,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtilsBean;true;getNestedProperty;(Object,String,String);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtilsBean;true;getNestedProperty;(Object,String,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtilsBean;true;getNestedProperty;(Object,String,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtilsBean;true;getProperty;(Object,String,String);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtilsBean;true;getProperty;(Object,String,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtilsBean;true;getProperty;(Object,String,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtilsBean;true;getSimpleProperty;(Object,String,String);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtilsBean;true;getSimpleProperty;(Object,String,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtilsBean;true;setDefaultLocale;(Locale);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale;LocaleBeanUtilsBean;true;setProperty;(Object,String,Object,String);;Argument[-1];Argument[0];taint",
        "org.apache.commons.beanutils2.locale;LocaleConvertUtils;true;convert;(Object);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleConvertUtils;true;convert;(Object,Locale,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleConvertUtils;true;convert;(Object,Locale,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleConvertUtils;true;convert;(Object,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleConvertUtils;true;convert;(String,Class);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleConvertUtils;true;convert;(String,Class,Locale,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleConvertUtils;true;convert;(String,Class,Locale,String);;Argument[2];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleConvertUtils;true;convert;(String,Class,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleConvertUtils;true;lookup;(Class,Locale);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleConvertUtilsBean;true;convert;(Object);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleConvertUtilsBean;true;convert;(Object);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleConvertUtilsBean;true;convert;(Object,Locale,String);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleConvertUtilsBean;true;convert;(Object,Locale,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleConvertUtilsBean;true;convert;(Object,Locale,String);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale;LocaleConvertUtilsBean;true;convert;(Object,Locale,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleConvertUtilsBean;true;convert;(Object,String);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleConvertUtilsBean;true;convert;(Object,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleConvertUtilsBean;true;convert;(String,Class);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleConvertUtilsBean;true;convert;(String,Class);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleConvertUtilsBean;true;convert;(String,Class,Locale,String);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleConvertUtilsBean;true;convert;(String,Class,Locale,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleConvertUtilsBean;true;convert;(String,Class,Locale,String);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale;LocaleConvertUtilsBean;true;convert;(String,Class,Locale,String);;Argument[2];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleConvertUtilsBean;true;convert;(String,Class,String);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleConvertUtilsBean;true;convert;(String,Class,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleConvertUtilsBean;true;convert;(String[],Class,Locale,String);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale;LocaleConvertUtilsBean;true;deregister;(Class,Locale);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale;LocaleConvertUtilsBean;true;getDefaultLocale;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleConvertUtilsBean;true;lookup;(Class,Locale);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleConvertUtilsBean;true;lookup;(Class,Locale);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale;LocaleConvertUtilsBean;true;lookup;(Class,Locale);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleConvertUtilsBean;true;register;(LocaleConverter,Class,Locale);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale;LocaleConvertUtilsBean;true;setDefaultLocale;(Locale);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2.locale;LocaleConverter;true;convert;(Class,Object,String);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2.locale;LocaleConverter;true;convert;(Class,Object,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BaseDynaBeanMapDecorator;true;BaseDynaBeanMapDecorator;(DynaBean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;BaseDynaBeanMapDecorator;true;BaseDynaBeanMapDecorator;(DynaBean,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;BaseDynaBeanMapDecorator;true;getDynaBean;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BasicDynaBean;true;BasicDynaBean;(DynaClass);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;BasicDynaBean;true;getMap;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BasicDynaClass;true;BasicDynaClass;(String,Class);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;BasicDynaClass;true;BasicDynaClass;(String,Class,DynaProperty[]);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;BasicDynaClass;true;BasicDynaClass;(String,Class,DynaProperty[]);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2;BeanComparator;true;BeanComparator;(String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;BeanComparator;true;BeanComparator;(String,Comparator);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;BeanComparator;true;BeanComparator;(String,Comparator);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2;BeanComparator;true;getComparator;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanComparator;true;getProperty;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanComparator;true;setProperty;(String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;BeanMap;true;BeanMap;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;BeanMap;true;getBean;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanMap;true;getReadMethod;(String);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanMap;true;getWriteMethod;(String);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanMap;true;keyIterator;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanMap;true;putAllWriteable;(BeanMap);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;BeanMap;true;setBean;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;BeanMap;true;toString;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanPredicate;true;BeanPredicate;(String,Predicate);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;BeanPredicate;true;BeanPredicate;(String,Predicate);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2;BeanPredicate;true;getPredicate;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanPredicate;true;getPropertyName;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanPredicate;true;setPredicate;(Predicate);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;BeanPredicate;true;setPropertyName;(String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;BeanPropertyValueChangeConsumer;true;BeanPropertyValueChangeConsumer;(String,Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;BeanPropertyValueChangeConsumer;true;BeanPropertyValueChangeConsumer;(String,Object);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2;BeanPropertyValueChangeConsumer;true;BeanPropertyValueChangeConsumer;(String,Object,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;BeanPropertyValueChangeConsumer;true;BeanPropertyValueChangeConsumer;(String,Object,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2;BeanPropertyValueChangeConsumer;true;getPropertyName;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanPropertyValueChangeConsumer;true;getPropertyValue;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanPropertyValueEqualsPredicate;true;BeanPropertyValueEqualsPredicate;(String,Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;BeanPropertyValueEqualsPredicate;true;BeanPropertyValueEqualsPredicate;(String,Object);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2;BeanPropertyValueEqualsPredicate;true;BeanPropertyValueEqualsPredicate;(String,Object,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;BeanPropertyValueEqualsPredicate;true;BeanPropertyValueEqualsPredicate;(String,Object,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2;BeanPropertyValueEqualsPredicate;true;getPropertyName;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanPropertyValueEqualsPredicate;true;getPropertyValue;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanToPropertyValueTransformer;true;BeanToPropertyValueTransformer;(String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;BeanToPropertyValueTransformer;true;BeanToPropertyValueTransformer;(String,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;BeanToPropertyValueTransformer;true;getPropertyName;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtils;true;cloneBean;(Object);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtils;true;describe;(Object);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtils;true;getArrayProperty;(Object,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtils;true;getArrayProperty;(Object,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtils;true;getIndexedProperty;(Object,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtils;true;getIndexedProperty;(Object,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtils;true;getIndexedProperty;(Object,String,int);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtils;true;getIndexedProperty;(Object,String,int);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtils;true;getMappedProperty;(Object,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtils;true;getMappedProperty;(Object,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtils;true;getMappedProperty;(Object,String,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtils;true;getMappedProperty;(Object,String,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtils;true;getNestedProperty;(Object,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtils;true;getNestedProperty;(Object,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtils;true;getProperty;(Object,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtils;true;getProperty;(Object,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtils;true;getSimpleProperty;(Object,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;BeanUtilsBean;(ConvertUtilsBean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;BeanUtilsBean;(ConvertUtilsBean,PropertyUtilsBean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;BeanUtilsBean;(ConvertUtilsBean,PropertyUtilsBean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;cloneBean;(Object);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;copyProperties;(Object,Object);;Argument[-1];Argument[0];taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;copyProperty;(Object,String,Object);;Argument[-1];Argument[0];taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;describe;(Object);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;describe;(Object);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;getArrayProperty;(Object,String);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;getArrayProperty;(Object,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;getArrayProperty;(Object,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;getConvertUtils;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;getIndexedProperty;(Object,String);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;getIndexedProperty;(Object,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;getIndexedProperty;(Object,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;getIndexedProperty;(Object,String,int);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;getIndexedProperty;(Object,String,int);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;getIndexedProperty;(Object,String,int);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;getMappedProperty;(Object,String);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;getMappedProperty;(Object,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;getMappedProperty;(Object,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;getMappedProperty;(Object,String,String);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;getMappedProperty;(Object,String,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;getMappedProperty;(Object,String,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;getNestedProperty;(Object,String);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;getNestedProperty;(Object,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;getNestedProperty;(Object,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;getProperty;(Object,String);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;getProperty;(Object,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;getProperty;(Object,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;getPropertyUtils;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;getSimpleProperty;(Object,String);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;getSimpleProperty;(Object,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;populate;(Object,Map);;Argument[-1];Argument[0];taint",
        "org.apache.commons.beanutils2;BeanUtilsBean;true;setProperty;(Object,String,Object);;Argument[-1];Argument[0];taint",
        "org.apache.commons.beanutils2;ConstructorUtils;true;getAccessibleConstructor;(Constructor);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;ContextClassLoaderLocal;true;get;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;ContextClassLoaderLocal;true;set;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;ConversionException;true;ConversionException;(String,Throwable);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2;ConversionException;true;ConversionException;(Throwable);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;ConvertUtils;true;convert;(Object);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;ConvertUtils;true;convert;(Object,Class);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;ConvertUtils;true;convert;(String,Class);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;ConvertUtils;true;convert;(String[],Class);;ArrayElement of Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;ConvertUtilsBean;true;convert;(Object);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;ConvertUtilsBean;true;convert;(Object);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;ConvertUtilsBean;true;convert;(Object,Class);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;ConvertUtilsBean;true;convert;(Object,Class);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;ConvertUtilsBean;true;convert;(String,Class);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;ConvertUtilsBean;true;convert;(String,Class);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;ConvertUtilsBean;true;convert;(String[],Class);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;ConvertUtilsBean;true;convert;(String[],Class);;ArrayElement of Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;ConvertUtilsBean;true;lookup;(Class);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;ConvertUtilsBean;true;lookup;(Class,Class);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;ConvertUtilsBean;true;register;(Converter,Class);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;Converter;true;convert;(Class,Object);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;Converter;true;convert;(Class,Object);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2;ConvertingWrapDynaBean;true;ConvertingWrapDynaBean;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;DynaBean;true;get;(String);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;DynaBean;true;get;(String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;DynaBean;true;get;(String,String);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;DynaBean;true;get;(String,String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;DynaBean;true;get;(String,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;DynaBean;true;get;(String,int);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;DynaBean;true;get;(String,int);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;DynaBean;true;get;(String,int);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;DynaBean;true;getDynaClass;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;DynaBean;true;set;(String,Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;DynaBean;true;set;(String,Object);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2;DynaBean;true;set;(String,String,Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;DynaBean;true;set;(String,int,Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;DynaBean;true;set;(String,int,Object);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2;DynaBeanPropertyMapDecorator;true;DynaBeanPropertyMapDecorator;(DynaBean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;DynaBeanPropertyMapDecorator;true;DynaBeanPropertyMapDecorator;(DynaBean,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;DynaClass;true;getDynaProperties;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;DynaClass;true;getDynaProperty;(String);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;DynaClass;true;getDynaProperty;(String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;DynaClass;true;getName;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;DynaClass;true;newInstance;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;DynaProperty;true;DynaProperty;(String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;DynaProperty;true;DynaProperty;(String,Class);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;DynaProperty;true;DynaProperty;(String,Class,Class);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;DynaProperty;true;getName;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;DynaProperty;true;toString;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;FluentPropertyBeanIntrospector;true;FluentPropertyBeanIntrospector;(String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;FluentPropertyBeanIntrospector;true;getWriteMethodPrefix;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;IntrospectionContext;true;addPropertyDescriptor;(PropertyDescriptor);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;IntrospectionContext;true;addPropertyDescriptors;(PropertyDescriptor[]);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;IntrospectionContext;true;getPropertyDescriptor;(String);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;IntrospectionContext;true;propertyNames;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;LazyDynaBean;true;LazyDynaBean;(DynaClass);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;LazyDynaBean;true;LazyDynaBean;(String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;LazyDynaBean;true;getMap;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;LazyDynaClass;true;LazyDynaClass;(String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;LazyDynaClass;true;LazyDynaClass;(String,Class);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;LazyDynaClass;true;LazyDynaClass;(String,Class,DynaProperty[]);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;LazyDynaClass;true;LazyDynaClass;(String,Class,DynaProperty[]);;Argument[2];Argument[-1];taint",
        "org.apache.commons.beanutils2;LazyDynaClass;true;LazyDynaClass;(String,DynaProperty[]);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;LazyDynaClass;true;LazyDynaClass;(String,DynaProperty[]);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2;LazyDynaList;true;LazyDynaList;(Collection);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;LazyDynaList;true;LazyDynaList;(DynaClass);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;LazyDynaList;true;LazyDynaList;(Object[]);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;LazyDynaList;true;setElementDynaClass;(DynaClass);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;LazyDynaList;true;toDynaBeanArray;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;LazyDynaMap;true;LazyDynaMap;(DynaClass);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;LazyDynaMap;true;LazyDynaMap;(DynaProperty[]);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;LazyDynaMap;true;LazyDynaMap;(Map);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;LazyDynaMap;true;LazyDynaMap;(String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;LazyDynaMap;true;LazyDynaMap;(String,DynaProperty[]);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;LazyDynaMap;true;LazyDynaMap;(String,DynaProperty[]);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2;LazyDynaMap;true;LazyDynaMap;(String,Map);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;LazyDynaMap;true;LazyDynaMap;(String,Map);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2;LazyDynaMap;true;setMap;(Map);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;MethodUtils;true;getAccessibleMethod;(Class,Method);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2;MethodUtils;true;getAccessibleMethod;(Method);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;MutableDynaClass;true;add;(String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;MutableDynaClass;true;add;(String,Class);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;PropertyUtils;true;describe;(Object);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;PropertyUtils;true;getIndexedProperty;(Object,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;PropertyUtils;true;getIndexedProperty;(Object,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2;PropertyUtils;true;getIndexedProperty;(Object,String,int);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;PropertyUtils;true;getIndexedProperty;(Object,String,int);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2;PropertyUtils;true;getMappedProperty;(Object,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;PropertyUtils;true;getMappedProperty;(Object,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2;PropertyUtils;true;getMappedProperty;(Object,String,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;PropertyUtils;true;getMappedProperty;(Object,String,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2;PropertyUtils;true;getNestedProperty;(Object,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;PropertyUtils;true;getNestedProperty;(Object,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2;PropertyUtils;true;getProperty;(Object,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;PropertyUtils;true;getProperty;(Object,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2;PropertyUtils;true;getSimpleProperty;(Object,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;PropertyUtilsBean;true;addBeanIntrospector;(BeanIntrospector);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;PropertyUtilsBean;true;describe;(Object);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;PropertyUtilsBean;true;getIndexedProperty;(Object,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;PropertyUtilsBean;true;getIndexedProperty;(Object,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2;PropertyUtilsBean;true;getIndexedProperty;(Object,String,int);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;PropertyUtilsBean;true;getIndexedProperty;(Object,String,int);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2;PropertyUtilsBean;true;getMappedProperty;(Object,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;PropertyUtilsBean;true;getMappedProperty;(Object,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2;PropertyUtilsBean;true;getMappedProperty;(Object,String,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;PropertyUtilsBean;true;getMappedProperty;(Object,String,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2;PropertyUtilsBean;true;getNestedProperty;(Object,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;PropertyUtilsBean;true;getNestedProperty;(Object,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2;PropertyUtilsBean;true;getProperty;(Object,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;PropertyUtilsBean;true;getProperty;(Object,String);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2;PropertyUtilsBean;true;getPropertyDescriptor;(Object,String);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;PropertyUtilsBean;true;getPropertyDescriptors;(Class);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;PropertyUtilsBean;true;getPropertyDescriptors;(Object);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;PropertyUtilsBean;true;getResolver;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;PropertyUtilsBean;true;getSimpleProperty;(Object,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.beanutils2;PropertyUtilsBean;true;setResolver;(Resolver);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;ResultSetDynaClass;true;ResultSetDynaClass;(ResultSet);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;ResultSetDynaClass;true;ResultSetDynaClass;(ResultSet,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;ResultSetDynaClass;true;ResultSetDynaClass;(ResultSet,boolean,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;RowSetDynaClass;true;getRows;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;SuppressPropertiesBeanIntrospector;true;SuppressPropertiesBeanIntrospector;(Collection);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;SuppressPropertiesBeanIntrospector;true;getSuppressedProperties;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;WeakFastHashMap;true;WeakFastHashMap;(Map);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;WrapDynaBean;true;WrapDynaBean;(Object);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;WrapDynaBean;true;WrapDynaBean;(Object,WrapDynaClass);;Argument[0];Argument[-1];taint",
        "org.apache.commons.beanutils2;WrapDynaBean;true;WrapDynaBean;(Object,WrapDynaClass);;Argument[1];Argument[-1];taint",
        "org.apache.commons.beanutils2;WrapDynaBean;true;getInstance;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.beanutils2;WrapDynaClass;true;createDynaClass;(Class,PropertyUtilsBean);;Argument[1];ReturnValue;taint",
        "org.apache.commons.beanutils2;WrapDynaClass;true;getPropertyDescriptor;(String);;Argument[-1];ReturnValue;taint"
      ]
  }
}
