/** Definitions of taint steps in the Codec framework */

import java
private import semmle.code.java.dataflow.ExternalFlow

private class CodecSinksCsv extends SinkModelCsv {
  override predicate row(string row) {
    row = ["org.apache.commons.codec.cli;Digest;true;main;(String[]);;Argument[0];write-file"]
  }
}

private class CodecSummaryCsv extends SummaryModelCsv {
  override predicate row(string row) {
    row =
      [
        "org.apache.commons.codec.binary;Base16OutputStream;true;Base16OutputStream;(OutputStream);;Argument[0];Argument[-1];taint",
        "org.apache.commons.codec.binary;Base16OutputStream;true;Base16OutputStream;(OutputStream,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.codec.binary;Base16OutputStream;true;Base16OutputStream;(OutputStream,boolean,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.codec.binary;Base16OutputStream;true;Base16OutputStream;(OutputStream,boolean,boolean,CodecPolicy);;Argument[0];Argument[-1];taint",
        "org.apache.commons.codec.binary;Base32;true;Base32;(int,byte[]);;Argument[1];Argument[-1];taint",
        "org.apache.commons.codec.binary;Base32;true;Base32;(int,byte[],boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.codec.binary;Base32;true;Base32;(int,byte[],boolean,byte);;Argument[1];Argument[-1];taint",
        "org.apache.commons.codec.binary;Base32;true;Base32;(int,byte[],boolean,byte,CodecPolicy);;Argument[1];Argument[-1];taint",
        "org.apache.commons.codec.binary;Base32InputStream;true;Base32InputStream;(InputStream,boolean,int,byte[]);;Argument[3];Argument[-1];taint",
        "org.apache.commons.codec.binary;Base32InputStream;true;Base32InputStream;(InputStream,boolean,int,byte[],CodecPolicy);;Argument[3];Argument[-1];taint",
        "org.apache.commons.codec.binary;Base32OutputStream;true;Base32OutputStream;(OutputStream);;Argument[0];Argument[-1];taint",
        "org.apache.commons.codec.binary;Base32OutputStream;true;Base32OutputStream;(OutputStream,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.codec.binary;Base32OutputStream;true;Base32OutputStream;(OutputStream,boolean,int,byte[]);;Argument[0];Argument[-1];taint",
        "org.apache.commons.codec.binary;Base32OutputStream;true;Base32OutputStream;(OutputStream,boolean,int,byte[]);;Argument[3];Argument[-1];taint",
        "org.apache.commons.codec.binary;Base32OutputStream;true;Base32OutputStream;(OutputStream,boolean,int,byte[],CodecPolicy);;Argument[0];Argument[-1];taint",
        "org.apache.commons.codec.binary;Base32OutputStream;true;Base32OutputStream;(OutputStream,boolean,int,byte[],CodecPolicy);;Argument[3];Argument[-1];taint",
        "org.apache.commons.codec.binary;Base64;true;Base64;(int,byte[]);;Argument[1];Argument[-1];taint",
        "org.apache.commons.codec.binary;Base64;true;Base64;(int,byte[],boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.codec.binary;Base64;true;Base64;(int,byte[],boolean,CodecPolicy);;Argument[1];Argument[-1];taint",
        "org.apache.commons.codec.binary;Base64;true;decodeBase64;(String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.binary;Base64;true;decodeBase64;(byte[]);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.binary;Base64;true;encodeBase64;(byte[]);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.binary;Base64;true;encodeBase64;(byte[],boolean);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.binary;Base64;true;encodeBase64;(byte[],boolean,boolean);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.binary;Base64;true;encodeBase64;(byte[],boolean,boolean,int);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.binary;Base64;true;encodeBase64Chunked;(byte[]);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.binary;Base64;true;encodeBase64String;(byte[]);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.binary;Base64;true;encodeBase64URLSafe;(byte[]);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.binary;Base64;true;encodeBase64URLSafeString;(byte[]);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.binary;Base64InputStream;true;Base64InputStream;(InputStream,boolean,int,byte[]);;Argument[3];Argument[-1];taint",
        "org.apache.commons.codec.binary;Base64InputStream;true;Base64InputStream;(InputStream,boolean,int,byte[],CodecPolicy);;Argument[3];Argument[-1];taint",
        "org.apache.commons.codec.binary;Base64OutputStream;true;Base64OutputStream;(OutputStream);;Argument[0];Argument[-1];taint",
        "org.apache.commons.codec.binary;Base64OutputStream;true;Base64OutputStream;(OutputStream,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.codec.binary;Base64OutputStream;true;Base64OutputStream;(OutputStream,boolean,int,byte[]);;Argument[0];Argument[-1];taint",
        "org.apache.commons.codec.binary;Base64OutputStream;true;Base64OutputStream;(OutputStream,boolean,int,byte[]);;Argument[3];Argument[-1];taint",
        "org.apache.commons.codec.binary;Base64OutputStream;true;Base64OutputStream;(OutputStream,boolean,int,byte[],CodecPolicy);;Argument[0];Argument[-1];taint",
        "org.apache.commons.codec.binary;Base64OutputStream;true;Base64OutputStream;(OutputStream,boolean,int,byte[],CodecPolicy);;Argument[3];Argument[-1];taint",
        "org.apache.commons.codec.binary;BaseNCodec;true;decode;(String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.binary;BaseNCodec;true;encode;(byte[],int,int);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.binary;BaseNCodec;true;encodeAsString;(byte[]);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.binary;BaseNCodec;true;encodeToString;(byte[]);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.binary;BaseNCodecOutputStream;true;BaseNCodecOutputStream;(OutputStream,BaseNCodec,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.codec.binary;BaseNCodecOutputStream;true;BaseNCodecOutputStream;(OutputStream,BaseNCodec,boolean);;Argument[1];Argument[-1];taint",
        "org.apache.commons.codec.binary;StringUtils;true;getByteBufferUtf8;(String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.binary;StringUtils;true;getBytesIso8859_1;(String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.binary;StringUtils;true;getBytesUnchecked;(String,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.binary;StringUtils;true;getBytesUsAscii;(String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.binary;StringUtils;true;getBytesUtf16;(String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.binary;StringUtils;true;getBytesUtf16Be;(String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.binary;StringUtils;true;getBytesUtf16Le;(String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.binary;StringUtils;true;getBytesUtf8;(String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.binary;StringUtils;true;newString;(byte[],String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.binary;StringUtils;true;newStringIso8859_1;(byte[]);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.binary;StringUtils;true;newStringUsAscii;(byte[]);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.binary;StringUtils;true;newStringUtf16;(byte[]);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.binary;StringUtils;true;newStringUtf16Be;(byte[]);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.binary;StringUtils;true;newStringUtf16Le;(byte[]);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.binary;StringUtils;true;newStringUtf8;(byte[]);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.digest;Blake3;false;update;(byte[]);;Argument[0];Argument[-1];taint",
        "org.apache.commons.codec.digest;Blake3;false;update;(byte[],int,int);;Argument[0];Argument[-1];taint",
        "org.apache.commons.codec.digest;DigestUtils;true;DigestUtils;(MessageDigest);;Argument[0];Argument[-1];taint",
        "org.apache.commons.codec.digest;DigestUtils;true;getDigest;(String,MessageDigest);;Argument[1];ReturnValue;taint",
        "org.apache.commons.codec.digest;DigestUtils;true;getMessageDigest;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.codec.digest;DigestUtils;true;updateDigest;(MessageDigest,ByteBuffer);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.digest;DigestUtils;true;updateDigest;(MessageDigest,File);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.digest;DigestUtils;true;updateDigest;(MessageDigest,InputStream);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.digest;DigestUtils;true;updateDigest;(MessageDigest,Path,OpenOption[]);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.digest;DigestUtils;true;updateDigest;(MessageDigest,RandomAccessFile);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.digest;DigestUtils;true;updateDigest;(MessageDigest,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.digest;DigestUtils;true;updateDigest;(MessageDigest,byte[]);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.digest;HmacUtils;false;updateHmac;(Mac,InputStream);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.digest;HmacUtils;false;updateHmac;(Mac,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.digest;HmacUtils;false;updateHmac;(Mac,byte[]);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.digest;Md5Crypt;true;md5Crypt;(byte[],String,String);;Argument[2];ReturnValue;taint",
        "org.apache.commons.codec.digest;Md5Crypt;true;md5Crypt;(byte[],String,String,Random);;Argument[2];ReturnValue;taint",
        "org.apache.commons.codec.digest;MurmurHash3$IncrementalHash32x86;true;add;(byte[],int,int);;Argument[0];Argument[-1];taint",
        "org.apache.commons.codec.language.bm;Lang;true;guessLanguage;(String);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.codec.language.bm;Lang;true;loadFromResource;(String,Languages);;Argument[1];ReturnValue;taint",
        "org.apache.commons.codec.language.bm;Languages$LanguageSet;true;from;(Set);;Element of Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.language.bm;Languages$LanguageSet;true;getAny;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.codec.language.bm;Languages$LanguageSet;true;merge;(LanguageSet);;Argument[-1];ReturnValue;value",
        "org.apache.commons.codec.language.bm;Languages$LanguageSet;true;merge;(LanguageSet);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.language.bm;Languages$LanguageSet;true;restrictTo;(LanguageSet);;Argument[-1];ReturnValue;value",
        "org.apache.commons.codec.language.bm;Languages$LanguageSet;true;restrictTo;(LanguageSet);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.language.bm;Languages$SomeLanguages;false;getLanguages;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.codec.language.bm;Languages;true;getLanguages;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.codec.language.bm;PhoneticEngine;true;getLang;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.codec.language.bm;Rule$Phoneme;false;Phoneme;(CharSequence,LanguageSet);;Argument[0];Argument[-1];taint",
        "org.apache.commons.codec.language.bm;Rule$Phoneme;false;Phoneme;(CharSequence,LanguageSet);;Argument[1];Argument[-1];taint",
        "org.apache.commons.codec.language.bm;Rule$Phoneme;false;Phoneme;(Phoneme,Phoneme,LanguageSet);;Argument[2];Argument[-1];taint",
        "org.apache.commons.codec.language.bm;Rule$Phoneme;false;append;(CharSequence);;Argument[-1];ReturnValue;value",
        "org.apache.commons.codec.language.bm;Rule$Phoneme;false;append;(CharSequence);;Argument[0];Argument[-1];taint",
        "org.apache.commons.codec.language.bm;Rule$Phoneme;false;append;(CharSequence);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.language.bm;Rule$Phoneme;false;getLanguages;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.codec.language.bm;Rule$Phoneme;false;getPhonemeText;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.codec.language.bm;Rule$Phoneme;false;mergeWithLanguage;(LanguageSet);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.language.bm;Rule$Phoneme;false;toString;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.codec.language.bm;Rule$PhonemeExpr;true;getPhonemes;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.codec.language.bm;Rule$PhonemeList;false;PhonemeList;(List);;Argument[0];Argument[-1];taint",
        "org.apache.commons.codec.language.bm;Rule;true;Rule;(String,String,String,PhonemeExpr);;Argument[0];Argument[-1];taint",
        "org.apache.commons.codec.language.bm;Rule;true;Rule;(String,String,String,PhonemeExpr);;Argument[3];Argument[-1];taint",
        "org.apache.commons.codec.language.bm;Rule;true;getLContext;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.codec.language.bm;Rule;true;getPattern;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.codec.language.bm;Rule;true;getPhoneme;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.codec.language.bm;Rule;true;getRContext;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.codec.language;Caverphone;true;caverphone;(String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.language;DoubleMetaphone$DoubleMetaphoneResult;true;append;(String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.codec.language;DoubleMetaphone$DoubleMetaphoneResult;true;append;(String,String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.codec.language;DoubleMetaphone$DoubleMetaphoneResult;true;append;(String,String);;Argument[1];Argument[-1];taint",
        "org.apache.commons.codec.language;DoubleMetaphone$DoubleMetaphoneResult;true;appendAlternate;(String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.codec.language;DoubleMetaphone$DoubleMetaphoneResult;true;appendPrimary;(String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.codec.language;DoubleMetaphone$DoubleMetaphoneResult;true;getAlternate;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.codec.language;DoubleMetaphone$DoubleMetaphoneResult;true;getPrimary;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.codec.language;Metaphone;true;metaphone;(String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.language;Nysiis;true;nysiis;(String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.language;RefinedSoundex;true;RefinedSoundex;(String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.codec.language;RefinedSoundex;true;RefinedSoundex;(char[]);;Argument[0];Argument[-1];taint",
        "org.apache.commons.codec.language;RefinedSoundex;true;soundex;(String);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.codec.language;RefinedSoundex;true;soundex;(String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.language;Soundex;true;Soundex;(String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.codec.language;Soundex;true;Soundex;(String,boolean);;Argument[0];Argument[-1];taint",
        "org.apache.commons.codec.language;Soundex;true;Soundex;(char[]);;Argument[0];Argument[-1];taint",
        "org.apache.commons.codec.language;Soundex;true;soundex;(String);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.codec.language;Soundex;true;soundex;(String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.net;BCodec;true;encode;(String,Charset);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.net;BCodec;true;encode;(String,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.net;QCodec;true;encode;(String,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.net;QuotedPrintableCodec;true;decode;(String,Charset);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.net;QuotedPrintableCodec;true;decode;(String,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.net;QuotedPrintableCodec;true;encode;(String,Charset);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.net;QuotedPrintableCodec;true;encode;(String,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.net;URLCodec;true;URLCodec;(String);;Argument[0];Argument[-1];taint",
        "org.apache.commons.codec.net;URLCodec;true;decode;(String,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.net;URLCodec;true;encode;(String,String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec.net;URLCodec;true;getDefaultCharset;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.codec.net;URLCodec;true;getEncoding;();;Argument[-1];ReturnValue;taint",
        "org.apache.commons.codec;BinaryDecoder;true;decode;(byte[]);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec;BinaryEncoder;true;encode;(byte[]);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec;Decoder;true;decode;(Object);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec;Encoder;true;encode;(Object);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.codec;Encoder;true;encode;(Object);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec;StringDecoder;true;decode;(String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec;StringEncoder;true;encode;(String);;Argument[-1];ReturnValue;taint",
        "org.apache.commons.codec;StringEncoder;true;encode;(String);;Argument[0];ReturnValue;taint",
        "org.apache.commons.codec;StringEncoderComparator;true;StringEncoderComparator;(StringEncoder);;Argument[0];Argument[-1];taint"
      ]
  }
}
