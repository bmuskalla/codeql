/** Definitions of taint steps in the crossoverJieJCSprout framework */

import java
private import semmle.code.java.dataflow.ExternalFlow

private class CrossoverJieJCSproutSummaryCsv extends SummaryModelCsv {
  override predicate row(string row) {
    row =
      [
        "com.crossoverjie.actual;LRULinkedMap;true;get;(Object);;Argument[-1];ReturnValue;taint",
        "com.crossoverjie.actual;LRULinkedMap;true;getAll;();;Argument[-1];ReturnValue;taint",
        "com.crossoverjie.actual;LRULinkedMap;true;put;(Object,Object);;Argument[0];Argument[-1];taint",
        "com.crossoverjie.actual;LRULinkedMap;true;put;(Object,Object);;Argument[1];Argument[-1];taint",
        "com.crossoverjie.actual;LRUMap;true;get;(Object);;Argument[-1];ReturnValue;taint",
        "com.crossoverjie.actual;LRUMap;true;put;(Object,Object);;Argument[0];Argument[-1];taint",
        "com.crossoverjie.actual;LRUMap;true;put;(Object,Object);;Argument[1];Argument[-1];taint",
        "com.crossoverjie.actual;LRUMap;true;toString;();;Argument[-1];ReturnValue;taint",
        "com.crossoverjie.actual;TwoThread$JiNum;true;JiNum;(TwoThread);;Argument[0];Argument[-1];taint",
        "com.crossoverjie.actual;TwoThread$OuNum;true;OuNum;(TwoThread);;Argument[0];Argument[-1];taint",
        "com.crossoverjie.actual;TwoThreadWaitNotify$JiNum;true;JiNum;(TwoThreadWaitNotify);;Argument[0];Argument[-1];taint",
        "com.crossoverjie.actual;TwoThreadWaitNotify$OuNum;true;OuNum;(TwoThreadWaitNotify);;Argument[0];Argument[-1];taint",
        "com.crossoverjie.actual;TwoThreadWaitNotifySimple$JiNum;true;JiNum;(TwoThreadWaitNotifySimple);;Argument[0];Argument[-1];taint",
        "com.crossoverjie.actual;TwoThreadWaitNotifySimple$OuNum;true;OuNum;(TwoThreadWaitNotifySimple);;Argument[0];Argument[-1];taint",
        "com.crossoverjie.algorithm;ArrayKShift;true;arrayKShift;(int[],int);;ArrayElement of Argument[0];ArrayElement of Argument[0];taint",
        "com.crossoverjie.algorithm;BinaryNode;true;BinaryNode;(Object,BinaryNode,BinaryNode);;Argument[0];Argument[-1];taint",
        "com.crossoverjie.algorithm;BinaryNode;true;BinaryNode;(Object,BinaryNode,BinaryNode);;Argument[1];Argument[-1];taint",
        "com.crossoverjie.algorithm;BinaryNode;true;BinaryNode;(Object,BinaryNode,BinaryNode);;Argument[2];Argument[-1];taint",
        "com.crossoverjie.algorithm;BinaryNode;true;getData;();;Argument[-1];ReturnValue;taint",
        "com.crossoverjie.algorithm;BinaryNode;true;getLeft;();;Argument[-1];ReturnValue;taint",
        "com.crossoverjie.algorithm;BinaryNode;true;getRight;();;Argument[-1];ReturnValue;taint",
        "com.crossoverjie.algorithm;BinaryNode;true;setData;(Object);;Argument[0];Argument[-1];taint",
        "com.crossoverjie.algorithm;BinaryNode;true;setLeft;(BinaryNode);;Argument[0];Argument[-1];taint",
        "com.crossoverjie.algorithm;BinaryNode;true;setRight;(BinaryNode);;Argument[0];Argument[-1];taint",
        "com.crossoverjie.algorithm;BinaryNode;true;toString;();;Argument[-1];ReturnValue;taint",
        "com.crossoverjie.algorithm;BinaryNodeTravel;true;BinaryNodeTravel;(Object,BinaryNodeTravel,BinaryNodeTravel);;Argument[0];Argument[-1];taint",
        "com.crossoverjie.algorithm;BinaryNodeTravel;true;BinaryNodeTravel;(Object,BinaryNodeTravel,BinaryNodeTravel);;Argument[1];Argument[-1];taint",
        "com.crossoverjie.algorithm;BinaryNodeTravel;true;BinaryNodeTravel;(Object,BinaryNodeTravel,BinaryNodeTravel);;Argument[2];Argument[-1];taint",
        "com.crossoverjie.algorithm;BinaryNodeTravel;true;getData;();;Argument[-1];ReturnValue;taint",
        "com.crossoverjie.algorithm;BinaryNodeTravel;true;getLeft;();;Argument[-1];ReturnValue;taint",
        "com.crossoverjie.algorithm;BinaryNodeTravel;true;getRight;();;Argument[-1];ReturnValue;taint",
        "com.crossoverjie.algorithm;BinaryNodeTravel;true;levelIterator;(BinaryNodeTravel);;Argument[0];ReturnValue;taint",
        "com.crossoverjie.algorithm;BinaryNodeTravel;true;setData;(Object);;Argument[0];Argument[-1];taint",
        "com.crossoverjie.algorithm;BinaryNodeTravel;true;setLeft;(BinaryNodeTravel);;Argument[0];Argument[-1];taint",
        "com.crossoverjie.algorithm;BinaryNodeTravel;true;setRight;(BinaryNodeTravel);;Argument[0];Argument[-1];taint",
        "com.crossoverjie.algorithm;BinaryNodeTravel;true;toString;();;Argument[-1];ReturnValue;taint",
        "com.crossoverjie.algorithm;LinkLoop$Node;true;Node;(Object);;Argument[0];Argument[-1];taint",
        "com.crossoverjie.algorithm;LinkLoop$Node;true;Node;(Object,Node);;Argument[0];Argument[-1];taint",
        "com.crossoverjie.algorithm;LinkLoop$Node;true;Node;(Object,Node);;Argument[1];Argument[-1];taint",
        "com.crossoverjie.algorithm;LinkedListMergeSort;true;mergeSort;(Node,int);;Argument[0];ReturnValue;taint",
        "com.crossoverjie.algorithm;MergeTwoSortedLists$ListNode;true;toString;();;Argument[-1];ReturnValue;taint",
        "com.crossoverjie.algorithm;ReverseNode$Node;true;Node;(Object,Node);;Argument[0];Argument[-1];taint",
        "com.crossoverjie.algorithm;ReverseNode$Node;true;Node;(Object,Node);;Argument[1];Argument[-1];taint",
        "com.crossoverjie.algorithm;TwoStackQueue;true;appendTail;(Object);;Argument[0];Argument[-1];taint",
        "com.crossoverjie.algorithm;TwoStackQueue;true;deleteHead;();;Argument[-1];ReturnValue;taint",
        "com.crossoverjie.concurrent.communication;MultipleThreadCountDownKit;false;setNotify;(Notify);;Argument[0];Argument[-1];taint",
        "com.crossoverjie.concurrent.future;FutureTask;true;FutureTask;(Callable);;Argument[0];Argument[-1];taint",
        "com.crossoverjie.concurrent;ArrayQueue;false;get;();;Argument[-1];ReturnValue;taint",
        "com.crossoverjie.concurrent;ArrayQueue;false;put;(Object);;Argument[0];Argument[-1];taint",
        "com.crossoverjie.concurrent;CustomThreadPool;true;CustomThreadPool;(int,int,long,TimeUnit,BlockingQueue,Notify);;Argument[4];Argument[-1];taint",
        "com.crossoverjie.concurrent;CustomThreadPool;true;CustomThreadPool;(int,int,long,TimeUnit,BlockingQueue,Notify);;Argument[5];Argument[-1];taint",
        "com.crossoverjie.concurrent;CustomThreadPool;true;execute;(Runnable);;Argument[0];Argument[-1];taint",
        "com.crossoverjie.concurrent;CustomThreadPool;true;submit;(Callable);;Argument[0];Argument[-1];taint",
        "com.crossoverjie.concurrent;CustomThreadPool;true;submit;(Callable);;Argument[0];ReturnValue;taint",
        "com.crossoverjie.design.pattern.chainofresponsibility;MsgProcessChain;true;addChain;(Process);;Argument[-1];ReturnValue;value",
        "com.crossoverjie.design.pattern.chainofresponsibility;MsgProcessChain;true;addChain;(Process);;Argument[0];Argument[-1];taint",
        "com.crossoverjie.design.pattern.chainofresponsibility;MsgProcessChain;true;addChain;(Process);;Argument[0];ReturnValue;taint",
        "com.crossoverjie.design.pattern.factorymethod;Animal;true;getName;();;Argument[-1];ReturnValue;taint",
        "com.crossoverjie.design.pattern.factorymethod;Animal;true;setName;(String);;Argument[0];Argument[-1];taint",
        "com.crossoverjie.disruptor;LongEventProducer;true;LongEventProducer;(RingBuffer);;Argument[0];Argument[-1];taint",
        "com.crossoverjie.guava.callback;Caller;true;getCallBackListener;();;Argument[-1];ReturnValue;taint",
        "com.crossoverjie.guava.callback;Caller;true;getNotifier;();;Argument[-1];ReturnValue;taint",
        "com.crossoverjie.guava.callback;Caller;true;getQuestion;();;Argument[-1];ReturnValue;taint",
        "com.crossoverjie.guava.callback;Caller;true;setCallBackListener;(CallBackListener);;Argument[0];Argument[-1];taint",
        "com.crossoverjie.guava.callback;Caller;true;setNotifier;(Notifier);;Argument[0];Argument[-1];taint",
        "com.crossoverjie.guava.callback;Caller;true;setQuestion;(String);;Argument[0];Argument[-1];taint",
        "com.crossoverjie.guava.callback;Caller;true;toString;();;Argument[-1];ReturnValue;taint",
        "com.crossoverjie.hystrix;CommandOrder;true;CommandOrder;(String);;Argument[0];Argument[-1];taint",
        "com.crossoverjie.hystrix;CommandUser;true;CommandUser;(String);;Argument[0];Argument[-1];taint"
      ]
  }
}
