/** Definitions of taint steps in the squareretrofit framework */

import java
private import semmle.code.java.dataflow.ExternalFlow

private class SquareretrofitSummaryCsv extends SummaryModelCsv {
  override predicate row(string row) {
    row =
      [
        "com.example.retrofit;AnnotatedConverters$AnnotatedConverterFactory$Builder;false;add;(Class,Factory);;Argument[-1];ReturnValue;value",
        "com.example.retrofit;AnnotatedConverters$AnnotatedConverterFactory$Builder;false;add;(Class,Factory);;Argument[1];Argument[-1];taint",
        "com.example.retrofit;AnnotatedConverters$AnnotatedConverterFactory$Builder;false;add;(Class,Factory);;Argument[1];ReturnValue;taint",
        "com.example.retrofit;Crawler;false;Crawler;(PageService);;Argument[0];Argument[-1];taint",
        "com.example.retrofit;SimpleService$Contributor;true;Contributor;(String,int);;Argument[0];Argument[-1];taint",
        "retrofit2.adapter.guava;HttpException;false;HttpException;(Response);;Argument[0];Argument[-1];taint",
        "retrofit2.adapter.java8;HttpException;false;HttpException;(Response);;Argument[0];Argument[-1];taint",
        "retrofit2.adapter.rxjava2;HttpException;false;HttpException;(Response);;Argument[0];Argument[-1];taint",
        "retrofit2.adapter.rxjava2;Result;false;error;();;Argument[-1];ReturnValue;taint",
        "retrofit2.adapter.rxjava2;Result;false;error;(Throwable);;Argument[0];ReturnValue;taint",
        "retrofit2.adapter.rxjava2;Result;false;response;();;Argument[-1];ReturnValue;taint",
        "retrofit2.adapter.rxjava2;Result;false;response;(Response);;Argument[0];ReturnValue;taint",
        "retrofit2.adapter.rxjava2;RxJava2CallAdapterFactory;false;createWithScheduler;(Scheduler);;Argument[0];ReturnValue;taint",
        "retrofit2.adapter.rxjava3;HttpException;false;HttpException;(Response);;Argument[0];Argument[-1];taint",
        "retrofit2.adapter.rxjava3;Result;false;error;();;Argument[-1];ReturnValue;taint",
        "retrofit2.adapter.rxjava3;Result;false;error;(Throwable);;Argument[0];ReturnValue;taint",
        "retrofit2.adapter.rxjava3;Result;false;response;();;Argument[-1];ReturnValue;taint",
        "retrofit2.adapter.rxjava3;Result;false;response;(Response);;Argument[0];ReturnValue;taint",
        "retrofit2.adapter.rxjava3;RxJava3CallAdapterFactory;false;createWithScheduler;(Scheduler);;Argument[0];ReturnValue;taint",
        "retrofit2.adapter.rxjava;HttpException;false;HttpException;(Response);;Argument[0];Argument[-1];taint",
        "retrofit2.adapter.rxjava;Result;false;error;();;Argument[-1];ReturnValue;taint",
        "retrofit2.adapter.rxjava;Result;false;error;(Throwable);;Argument[0];ReturnValue;taint",
        "retrofit2.adapter.rxjava;Result;false;response;();;Argument[-1];ReturnValue;taint",
        "retrofit2.adapter.rxjava;Result;false;response;(Response);;Argument[0];ReturnValue;taint",
        "retrofit2.adapter.rxjava;Result;false;toString;();;Argument[-1];ReturnValue;taint",
        "retrofit2.adapter.rxjava;RxJavaCallAdapterFactory;false;createWithScheduler;(Scheduler);;Argument[0];ReturnValue;taint",
        "retrofit2.converter.gson;GsonConverterFactory;false;create;(Gson);;Argument[0];ReturnValue;taint",
        "retrofit2.converter.jackson;JacksonConverterFactory;false;create;(ObjectMapper);;Argument[0];ReturnValue;taint",
        "retrofit2.converter.jaxb;JaxbConverterFactory;false;create;(JAXBContext);;Argument[0];ReturnValue;taint",
        "retrofit2.converter.moshi;MoshiConverterFactory;false;create;(Moshi);;Argument[0];ReturnValue;taint",
        "retrofit2.converter.protobuf;ProtoConverterFactory;false;createWithRegistry;(ExtensionRegistryLite);;Argument[0];ReturnValue;taint",
        "retrofit2.converter.simplexml;SimpleXmlConverterFactory;false;create;(Serializer);;Argument[0];ReturnValue;taint",
        "retrofit2.converter.simplexml;SimpleXmlConverterFactory;false;createNonStrict;(Serializer);;Argument[0];ReturnValue;taint",
        "retrofit2.mock;Calls;false;defer;(Callable);;Argument[0];ReturnValue;taint",
        "retrofit2.mock;Calls;false;failure;(IOException);;Argument[0];ReturnValue;taint",
        "retrofit2.mock;Calls;false;failure;(Throwable);;Argument[0];ReturnValue;taint",
        "retrofit2.mock;Calls;false;response;(Object);;Argument[0];ReturnValue;taint",
        "retrofit2.mock;Calls;false;response;(Response);;Argument[0];ReturnValue;taint",
        "retrofit2.mock;MockRetrofit$Builder;false;Builder;(Retrofit);;Argument[0];Argument[-1];taint",
        "retrofit2.mock;MockRetrofit$Builder;false;backgroundExecutor;(ExecutorService);;Argument[-1];ReturnValue;value",
        "retrofit2.mock;MockRetrofit$Builder;false;backgroundExecutor;(ExecutorService);;Argument[0];Argument[-1];taint",
        "retrofit2.mock;MockRetrofit$Builder;false;backgroundExecutor;(ExecutorService);;Argument[0];ReturnValue;taint",
        "retrofit2.mock;MockRetrofit$Builder;false;networkBehavior;(NetworkBehavior);;Argument[-1];ReturnValue;value",
        "retrofit2.mock;MockRetrofit$Builder;false;networkBehavior;(NetworkBehavior);;Argument[0];Argument[-1];taint",
        "retrofit2.mock;MockRetrofit$Builder;false;networkBehavior;(NetworkBehavior);;Argument[0];ReturnValue;taint",
        "retrofit2.mock;MockRetrofit;false;backgroundExecutor;();;Argument[-1];ReturnValue;taint",
        "retrofit2.mock;MockRetrofit;false;networkBehavior;();;Argument[-1];ReturnValue;taint",
        "retrofit2.mock;MockRetrofit;false;retrofit;();;Argument[-1];ReturnValue;taint",
        "retrofit2.mock;NetworkBehavior;false;create;(Random);;Argument[0];ReturnValue;taint",
        "retrofit2.mock;NetworkBehavior;false;failureException;();;Argument[-1];ReturnValue;taint",
        "retrofit2.mock;NetworkBehavior;false;setErrorFactory;(Callable);;Argument[0];Argument[-1];taint",
        "retrofit2.mock;NetworkBehavior;false;setFailureException;(Throwable);;Argument[0];Argument[-1];taint",
        "retrofit2;Converter$Factory;true;requestBodyConverter;(Type,Annotation[],Annotation[],Retrofit);;Argument[0];ReturnValue;taint",
        "retrofit2;Converter$Factory;true;responseBodyConverter;(Type,Annotation[],Retrofit);;Argument[0];ReturnValue;taint",
        "retrofit2;Converter$Factory;true;stringConverter;(Type,Annotation[],Retrofit);;Argument[0];ReturnValue;taint",
        "retrofit2;HttpException;true;HttpException;(Response);;Argument[0];Argument[-1];taint",
        "retrofit2;HttpException;true;message;();;Argument[-1];ReturnValue;taint",
        "retrofit2;HttpException;true;response;();;Argument[-1];ReturnValue;taint",
        "retrofit2;Invocation;false;arguments;();;Argument[-1];ReturnValue;taint",
        "retrofit2;Invocation;false;method;();;Argument[-1];ReturnValue;taint",
        "retrofit2;Invocation;false;of;(Method,List);;Argument[0];ReturnValue;taint",
        "retrofit2;Invocation;false;of;(Method,List);;Element of Argument[1];ReturnValue;taint",
        "retrofit2;Invocation;false;toString;();;Argument[-1];ReturnValue;taint",
        "retrofit2;Response;false;body;();;Argument[-1];ReturnValue;taint",
        "retrofit2;Response;false;error;(ResponseBody,Response);;Argument[0];ReturnValue;taint",
        "retrofit2;Response;false;error;(ResponseBody,Response);;Argument[1];ReturnValue;taint",
        "retrofit2;Response;false;error;(int,ResponseBody);;Argument[1];ReturnValue;taint",
        "retrofit2;Response;false;errorBody;();;Argument[-1];ReturnValue;taint",
        "retrofit2;Response;false;raw;();;Argument[-1];ReturnValue;taint",
        "retrofit2;Response;false;success;(Object);;Argument[0];ReturnValue;taint",
        "retrofit2;Response;false;success;(Object,Headers);;Argument[0];ReturnValue;taint",
        "retrofit2;Response;false;success;(Object,Response);;Argument[0];ReturnValue;taint",
        "retrofit2;Response;false;success;(Object,Response);;Argument[1];ReturnValue;taint",
        "retrofit2;Response;false;success;(int,Object);;Argument[1];ReturnValue;taint",
        "retrofit2;Retrofit$Builder;false;addCallAdapterFactory;(Factory);;Argument[-1];ReturnValue;value",
        "retrofit2;Retrofit$Builder;false;addCallAdapterFactory;(Factory);;Argument[0];Argument[-1];taint",
        "retrofit2;Retrofit$Builder;false;addCallAdapterFactory;(Factory);;Argument[0];ReturnValue;taint",
        "retrofit2;Retrofit$Builder;false;addConverterFactory;(Factory);;Argument[-1];ReturnValue;value",
        "retrofit2;Retrofit$Builder;false;addConverterFactory;(Factory);;Argument[0];Argument[-1];taint",
        "retrofit2;Retrofit$Builder;false;addConverterFactory;(Factory);;Argument[0];ReturnValue;taint",
        "retrofit2;Retrofit$Builder;false;baseUrl;(HttpUrl);;Argument[-1];ReturnValue;value",
        "retrofit2;Retrofit$Builder;false;baseUrl;(HttpUrl);;Argument[0];Argument[-1];taint",
        "retrofit2;Retrofit$Builder;false;baseUrl;(HttpUrl);;Argument[0];ReturnValue;taint",
        "retrofit2;Retrofit$Builder;false;baseUrl;(String);;Argument[-1];ReturnValue;taint",
        "retrofit2;Retrofit$Builder;false;baseUrl;(URL);;Argument[-1];ReturnValue;taint",
        "retrofit2;Retrofit$Builder;false;callAdapterFactories;();;Argument[-1];ReturnValue;taint",
        "retrofit2;Retrofit$Builder;false;callFactory;(Factory);;Argument[-1];ReturnValue;value",
        "retrofit2;Retrofit$Builder;false;callFactory;(Factory);;Argument[0];Argument[-1];taint",
        "retrofit2;Retrofit$Builder;false;callFactory;(Factory);;Argument[0];ReturnValue;taint",
        "retrofit2;Retrofit$Builder;false;callbackExecutor;(Executor);;Argument[-1];ReturnValue;value",
        "retrofit2;Retrofit$Builder;false;callbackExecutor;(Executor);;Argument[0];Argument[-1];taint",
        "retrofit2;Retrofit$Builder;false;callbackExecutor;(Executor);;Argument[0];ReturnValue;taint",
        "retrofit2;Retrofit$Builder;false;client;(OkHttpClient);;Argument[-1];ReturnValue;taint",
        "retrofit2;Retrofit$Builder;false;client;(OkHttpClient);;Argument[0];Argument[-1];taint",
        "retrofit2;Retrofit$Builder;false;client;(OkHttpClient);;Argument[0];ReturnValue;taint",
        "retrofit2;Retrofit$Builder;false;converterFactories;();;Argument[-1];ReturnValue;taint",
        "retrofit2;Retrofit$Builder;false;validateEagerly;(boolean);;Argument[-1];ReturnValue;value",
        "retrofit2;Retrofit;false;baseUrl;();;Argument[-1];ReturnValue;taint",
        "retrofit2;Retrofit;false;callAdapterFactories;();;Argument[-1];ReturnValue;taint",
        "retrofit2;Retrofit;false;callFactory;();;Argument[-1];ReturnValue;taint",
        "retrofit2;Retrofit;false;callbackExecutor;();;Argument[-1];ReturnValue;taint",
        "retrofit2;Retrofit;false;converterFactories;();;Argument[-1];ReturnValue;taint",
        "retrofit2;Retrofit;false;nextRequestBodyConverter;(Factory,Type,Annotation[],Annotation[]);;Argument[1];ReturnValue;taint",
        "retrofit2;Retrofit;false;nextResponseBodyConverter;(Factory,Type,Annotation[]);;Argument[1];ReturnValue;taint",
        "retrofit2;Retrofit;false;requestBodyConverter;(Type,Annotation[],Annotation[]);;Argument[0];ReturnValue;taint",
        "retrofit2;Retrofit;false;responseBodyConverter;(Type,Annotation[]);;Argument[0];ReturnValue;taint",
        "retrofit2;Retrofit;false;stringConverter;(Type,Annotation[]);;Argument[0];ReturnValue;taint"
      ]
  }
}
